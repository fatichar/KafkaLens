// <auto-generated />
using KafkaLens.ViewModels.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ViewModels.Migrations
{
    [DbContext(typeof(KafkaClientContext))]
    partial class KafkaClientContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("KafkaLens.ViewModels.Entities.KafkaCluster", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("BootstrapServers")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("bootstrap_servers");

                    b.Property<string>("ClientId")
                        .HasColumnType("TEXT")
                        .HasColumnName("client_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("kafka_cluster");
                });

            modelBuilder.Entity("KafkaLens.ViewModels.Entities.KafkaLensClient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Protocol")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("protocol");

                    b.Property<string>("ServerUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("server_url");

                    b.HasKey("Id");

                    b.ToTable("kafkalens_client");
                });

            modelBuilder.Entity("KafkaLens.ViewModels.Entities.KafkaCluster", b =>
                {
                    b.HasOne("KafkaLens.ViewModels.Entities.KafkaLensClient", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
